package com.niit.dao;

import java.util.List;

import org.hibernate.Criteria;
import org.hibernate.SessionFactory;
import org.hibernate.query.Query;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.transaction.annotation.Transactional;

import com.niit.model.Category;
import com.niit.model.Users;

public class UsersDaoImpl {

	@Autowired
	private SessionFactory sessionFactory;

public UsersDaoImpl(SessionFactory sessionFactory) {
		this.sessionFactory = sessionFactory;

	}

@Transactional
	public void saveOrUpdate(Users users) {
		sessionFactory.getCurrentSession().saveOrUpdate(users);

	}

@Transactional
public void editUsers(Users users) {
	sessionFactory.getCurrentSession().saveOrUpdate(users);

}

@Transactional
	public void delete(String user_id) {
		Users usersToDelete = new Users();
		usersToDelete.setUser_id(user_id);
		sessionFactory.getCurrentSession().delete(usersToDelete);

	}

@Transactional
	public Users get(String category_id) {

		// sessionFactory.getCurrentSession().get(Users.class,category_id);
		String hql = "from Users where category_id=" + "'" + category_id + "'";
		Query query =(Query) sessionFactory.getCurrentSession().createQuery(hql);
		List<Users> listUsers= (List<Users>) query.getResultList();
		if (listUsers!= null && !listUsers.isEmpty()) {
			return listUsers.get(0);
		}
		return null;
	}

@Transactional
	public List<Users> list() {
		@SuppressWarnings("unchecked")
		List<Users> listUsers= (List<Users>) sessionFactory.getCurrentSession()
		.createCriteria(Users.class).setResultTransformer(Criteria.DISTINCT_ROOT_ENTITY).list();
		return listUsers;
	}


}
